defaultSettings:
  # Storage & housekeeping
  defaultDataPath: "/var/lib/longhorn"
  createDefaultDiskLabeledNodes: false
  orphanAutoDeletion: true
  snapshotMaxCount: "5"

  # Scheduling, locality & balance
  defaultReplicaCount: "2"
  defaultDataLocality: best-effort
  replicaAutoBalance: best-effort
  replicaAutoBalanceDiskPressureThreshold: "80"

  # Capacity safety rails
  storageOverProvisioningPercentage: "200"
  storageMinimalAvailablePercentage: "15"

  # Reliability & maintenance
  nodeDownPodDeletionPolicy: "delete-both-statefulset-and-deployment-pod"
  autoDeletePodWhenVolumeDetachedUnexpectedly: true
  disableSchedulingOnCordonedNode: true
  allowVolumeCreationWithDegradedAvailability: false
  concurrentReplicaRebuildPerNodeLimit: "1"
  concurrentAutomaticEngineUpgradePerNodeLimit: "1"

  # CPU reservations for Instance Managers
  guaranteedEngineManagerCPU: "5"
  guaranteedReplicaManagerCPU: "5"

  # Priority class so Longhorn daemons donâ€™t get evicted first
  priorityClass: system-cluster-critical

# Keep the runtime footprints modest for RPis
longhornManager:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi

longhornDriver:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi

longhornUI:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# StorageClass defaults
persistence:
  defaultClass: true
  defaultClassReplicaCount: "2"
  defaultDataLocality: best-effort
  defaultReplicaAutoBalance: best-effort
  reclaimPolicy: Delete
  defaultFsType: ext4

ingress:
  enabled: true
  ingressClassName: nginx
  host: longhorn.atoca.house
  tls: true
  tlsSecret: longhorn-tls
  path: /
  annotations:
    cert-manager.io/cluster-issuer: "cloudflare-prod"

# Optional: enable for upgrade pre-flight checks, otherwise keep disabled
preUpgradeChecker:
  jobEnabled: false
