controllers:
  qui:
    containers:
      qui:
        image:
          repository: ghcr.io/autobrr/qui
          tag: v1.5.0@sha256:393055be10e7b11b893f665c02b936cf50529ed1dbd6166ad1177bf36e1a68cb
          pullPolicy: IfNotPresent
        env:
          QUI__HOST: 0.0.0.0
          QUI__PORT: &port 80
          QUI__LOG_LEVEL: INFO
          TZ: Europe/Amsterdam
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /health
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 512Mi

service:
  qui:
    controller: qui
    ports:
      http:
        port: *port

ingress:
  qui:
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare-prod"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        proxy_intercept_errors off;
      nginx.ingress.kubernetes.io/custom-http-errors: ""
      nginx.ingress.kubernetes.io/proxy-intercept-errors: "false"
    hosts:
      - host: qui.atoca.house
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: qui
              port: http
    tls:
      - hosts:
          - qui.atoca.house
        secretName: qui-tls

persistence:
  qui:
    enabled: true
    type: persistentVolumeClaim
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /config
