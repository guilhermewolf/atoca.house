deploymentStrategy:
  type: Recreate
admin:
  existingSecret: grafana-secrets
env:
  GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
  GF_EXPLORE_ENABLED: true
  GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
  GF_SERVER_ROOT_URL: https://grafana.atoca.houses
grafana.ini:
  news:
    news_feed_enabled: false
datasources:
  datasources.yaml:
    apiVersion: 1
    deleteDatasources:
      - { name: Alertmanager, orgId: 1 }
      #- { name: Loki, orgId: 1 }
      - { name: Prometheus, orgId: 1 }
    datasources:
      - name: Prometheus
        type: prometheus
        uid: prometheus
        access: proxy
        url: http://monitoring-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090
        jsonData:
          timeInterval: 1m
        #isDefault: true
      # - name: Loki
      #   type: loki
      #   uid: loki
      #   access: proxy
      #   url: 
      #   jsonData:
      #     maxLines: 250
      - name: Alertmanager
        type: alertmanager
        uid: alertmanager
        access: proxy
        url: http://monitoring-kube-prometheus-alertmanager.monitoring.svc.cluster.local:9093
        jsonData:
          implementation: prometheus
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: default
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
dashboards:
  default:
    cert-manager:
      url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
      datasource: Prometheus
    cloudflared:
      # renovate: depName="Cloudflare Tunnels (cloudflared)"
      gnetId: 17457
      revision: 6
      datasource:
        - { name: DS_PROMETHEUS, value: Prometheus }
    external-dns:
      # renovate: depName="External-dns"
      gnetId: 15038
      revision: 3
      datasource: Prometheus
    kubernetes-api-server:
      # renovate: depName="Kubernetes / System / API Server"
      gnetId: 15761
      revision: 17
      datasource: Prometheus
    kubernetes-coredns:
      # renovate: depName="Kubernetes / System / CoreDNS"
      gnetId: 15762
      revision: 18
      datasource: Prometheus
    kubernetes-global:
      # renovate: depName="Kubernetes / Views / Global"
      gnetId: 15757
      revision: 37
      datasource: Prometheus
    kubernetes-namespaces:
      # renovate: depName="Kubernetes / Views / Namespaces"
      gnetId: 15758
      revision: 34
      datasource: Prometheus
    kubernetes-nodes:
      # renovate: depName="Kubernetes / Views / Nodes"
      gnetId: 15759
      revision: 29
      datasource: Prometheus
    kubernetes-pods:
      # renovate: depName="Kubernetes / Views / Pods"
      gnetId: 15760
      revision: 28
      datasource: Prometheus
    kubernetes-volumes:
      # renovate: depName="K8s / Storage / Volumes / Cluster"
      gnetId: 11454
      revision: 14
      datasource: Prometheus
    nginx:
      url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
      datasource: Prometheus
    nginx-request-handling-performance:
      url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
      datasource: Prometheus
    node-exporter-full:
      # renovate: depName="Node Exporter Full"
      gnetId: 1860
      revision: 37
      datasource: Prometheus
    node-feature-discovery:
      url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
      datasource: Prometheus
    prometheus:
      # renovate: depName="Prometheus"
      gnetId: 19105
      revision: 3
      datasource: Prometheus
sidecar:
  dashboards:
    enabled: true
    searchNamespace: ALL
    label: grafana_dashboard
    folderAnnotation: grafana_folder
    provider:
      disableDelete: true
      foldersFromFilesStructure: true
  datasources:
    enabled: true
    searchNamespace: ALL
    labelValue: ""
plugins:
  - grafana-clock-panel
  - grafana-piechart-panel
  - grafana-worldmap-panel
  - natel-discrete-panel
  - pr0ps-trackmap-panel
  - vonage-status-panel
serviceMonitor:
  enabled: true
ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: "cloudflare-prod"
  ingressClassName: nginx
  hosts:
    - grafana.atoca.house
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.atoca.house
persistence:
  enabled: false
testFramework:
  enabled: false