crds:
  enabled: true

nameOverride: "monitoring"
cleanPrometheusOperatorObjectNames: true

alertmanager:
  alertmanagerSpec:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 250m
        memory: 256Mi
    alertmanagerConfiguration:
      name: alertmanager
      global:
        resolveTimeout: 5m
    externalUrl: https://alertmanager.atoca.house
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare-prod"
    hosts:
      - alertmanager.atoca.house
    tls:
      - secretName: alertmanager-tls
        hosts:
          - alertmanager.atoca.house

kubeEtcd:
  service:
    selector:
      component: kube-apiserver # etcd runs on control plane nodes
kubeProxy:
  enabled: false


prometheus:
  prometheusSpec:
    externalUrl: https://prometheus.atoca.house
    image:
      registry: docker.io
      repository: prompp/prompp
      tag: 2.53.2-0.4.0-arm64
    securityContext:
      runAsNonRoot: true
      runAsUser: 64535
      runAsGroup: 64535
      fsGroup: 64535
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        #cpu: 1000m
        memory: 1Gi
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
      - job_name: 'compartilhado-node-exporter'
        scrape_interval: 30s
        static_configs:
          - targets:
              - '192.168.178.160:9100'  # Node Exporter on NAS
      - job_name: 'compartilhado-cadvisor'
        scrape_interval: 5s
        static_configs:
          - targets:
              - '192.168.178.160:8083'  # cAdvisor on NAS
      - job_name: 'hass-node-exporter'
        scrape_interval: 30s
        static_configs:
          - targets:
              - '192.168.178.22:9100'  # Node Exporter on Home Assistant
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
    retention: 2d
    retentionSize: "15GB"
    walCompression: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare-prod"
    hosts:
      - prometheus.atoca.house
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.atoca.house

kube-state-metrics:
  fullnameOverride: kube-state-metrics
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi
  metricLabelsAllowlist:
    - pods=[*]
    - deployments=[*]
    - persistentvolumeclaims=[*]
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node

prometheus-node-exporter:
  fullnameOverride: node-exporter
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      #cpu: 100m
      memory: 128Mi
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
<<<<<<< HEAD
=======

# kubeEtcd:
#   service:
#     selector:
#       component: kube-apiserver # etcd runs on control plane nodes
kubeEtcd:
  enabled: true
  endpoints:
    - 192.168.178.201
  service:
    enabled: true
    port: 2381
    targetPort: 2381
  serviceMonitor:
    enabled: true
    scheme: http

kubeProxy:
  enabled: false

kubeControllerManager:
  enabled: true
  endpoints:
    - 192.168.178.201
  service:
    enabled: true
    port: 10257
    targetPort: 10257
  serviceMonitor:
    enabled: true
    scheme: https
    tlsConfig:
      insecureSkipVerify: true

kubeScheduler:
  enabled: true
  endpoints:
    - 192.168.178.201
  service:
    enabled: true
    port: 10259
    targetPort: 10259
  serviceMonitor:
    enabled: true
    scheme: https
    tlsConfig:
      insecureSkipVerify: true

kube-state-metrics:
  fullnameOverride: kube-state-metrics
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      #cpu: 100m
      memory: 128Mi
  metricLabelsAllowlist:
    - pods=[*]
    - deployments=[*]
    - persistentvolumeclaims=[*]
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
>>>>>>> ba0b6b5 (update the monitoring solution values)

grafana:
  enabled: false
  forceDeployDashboards: true