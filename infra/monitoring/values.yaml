crds:
  enabled: true
prometheusOperator:
  kubeletService:
    enabled: false
  serviceMonitor:
    relabelings:
    # Replace job value
    - sourceLabels:
      - __address__
      action: replace
      targetLabel: job
      replacement: prometheus-operator
alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
  serviceMonitor:
    relabelings:
      # Replace job value
      - sourceLabels:
        - __address__
        action: replace
        targetLabel: job
        replacement: alertmanager
prometheus:
  prometheusSpec:
    enableRemoteWriteReceiver: true
    # Resources request and limits
    resources:
      requests:
        memory: 500Mi
      limits:
        memory: 500Mi
    # PVC configuration
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
    # Retention period
    retention: 7d
    retentionSize: "20GB"
  serviceMonitor:
    relabelings:
      # Replace job value
      - sourceLabels:
        - __address__
        action: replace
        targetLabel: job
        replacement: prometheus
  service:
    type: NodePort
    nodePort: 32090  
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare-prod"
    hosts: 
      - prometheus.atoca.house
    tls: 
      - secretName: prometheus-tls
        hosts:
          - prometheus.atoca.house
grafana:
  # Configuring /grafana subpath
  # grafana.ini:
  #   server:
  #     domain: monitoring.atoca.house
  #     root_url: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
  #     serve_from_sub_path: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations: 
      cert-manager.io/cluster-issuer: "cloudflare-prod"
    hosts: 
      - grafana.atoca.house
    tls: 
    - secretName: grafana-tls
      hosts:
      - grafana.atoca.house

  # Admin user password
  adminPassword: "admin_password"
  # List of grafana plugins to be installed
  plugins:
    - grafana-piechart-panel
  # ServiceMonitor label and job relabel
  serviceMonitor:
    labels:
      release: kube-prometheus-stack
    relabelings:
      # Replace job value
      - sourceLabels:
        - __address__
        action: replace
        targetLabel: job
        replacement: grafana
  # Additional configuration to grafana dashboards sidecar
  # Search in all namespaces for configMaps containing label `grafana_dashboard`
  sidecar:
    dashboards:
      searchNamespace: ALL
      SCProvider: true
      annotations: {}
      defaultFolderName: null
      enabled: true
      folder: /tmp/dashboards
      folderAnnotation: null
      label: grafana_dashboard
      labelValue: null

# Disabling monitoring of K8s services.
# Monitoring of K3S components will be configured out of kube-prometheus-stack
kubelet:
  enabled: false
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
kubeEtcd:
  enabled: false
# Disable K8S Prometheus Rules
# Rules for K3S components will be configured out of kube-prometheus-stack
defaultRules:
  create: true
  rules:
    etcd: false
    k8s: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false
    kubelet: false
    kubeProxy: false
    kubernetesApps: false
    kubernetesResources: false
    kubernetesStorage: false
    kubernetesSystem: false
    kubeScheduler: false
