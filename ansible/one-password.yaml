- name: Retrieve secrets from One Password and seal them
  hosts: localhost
  vars:
    op_secret_id: "Private/atoca-house-k8s-onepassword-token/credential"
    op_file_id: "Private/atoca-house-k8s-credentials-file/1password-credentials.json"
    sealed_secret_namespace: "sealed-secrets"
    token_name: "onepassword-token"
    credential_file_name: "1password-credentials"
    credential_secret_name: "op-credentials"
    final_path: infra/kustomize-helm/one-password

  tasks:
    - name: Retrieve the secret from One Password
      ansible.builtin.command:
        cmd: "op read op://{{ op_secret_id }}"
      register: retrieved_secret

    - name: Write the retrieved secret to a file
      ansible.builtin.copy:
        content: "{{ retrieved_secret.stdout }}"
        dest: /tmp/your-secret.txt
        force: yes

    - name: Retrieve the file from One Password
      ansible.builtin.command:
        cmd: "op read -f --out-file /tmp/{{ credential_file_name }} op://{{ op_file_id }}"
    
    - name: Maniputate onepassword file
      ansible.builtin.shell:
        cmd: "cat /tmp/{{ credential_file_name }} | base64 | tr -d '\\n' > /tmp/{{ credential_file_name }}.json"

    - name: Create a Kubernetes secret for onepassword-token
      ansible.builtin.command:
        cmd: "kubectl -n one-password create secret generic {{ token_name }} --dry-run=client --from-file=token=/tmp/your-secret.txt -o yaml > /tmp/{{ token_name }}-unsealed.yaml" 
        _uses_shell: true

    - name: Seal the Kubernetes secret using Kubeseal
      ansible.builtin.command:
        cmd: "kubeseal --controller-namespace={{ sealed_secret_namespace }} -f /tmp/{{ token_name }}-unsealed.yaml -w {{ final_path }}/{{ token_name }}.yaml"

    - name: Create a Kubernetes secret from retrieved file
      ansible.builtin.command:
        cmd: "kubectl -n one-password create secret generic {{ credential_secret_name }} --from-file={{ credential_file_name }}.json=/tmp/{{ credential_file_name }}.json -o yaml --dry-run=client  > /tmp/{{ credential_secret_name }}-unsealed.yaml"
        _uses_shell: true
    
    - name: Seal the Kubernetes secret using Kubeseal
      ansible.builtin.command:
        cmd: "kubeseal --controller-namespace={{ sealed_secret_namespace }} -f /tmp/{{ credential_secret_name }}-unsealed.yaml -w {{ final_path }}/{{ credential_secret_name }}.yaml"

    - name: Commit and push changes to GitHub
      ansible.builtin.shell: |
        git add {{ final_path }}/{{ credential_secret_name }}.yaml
        git add {{ final_path }}/{{ token_name }}.yaml
        git commit -m "Add sealed secret for {{ secret_name }}"
        git push origin main
