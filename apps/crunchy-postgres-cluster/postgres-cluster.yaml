---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres
  annotations:
    postgres-operator.crunchydata.com/autoCreateUserSchema: true
spec:
  postgresVersion: 17

  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: "postgres"

  users:
    # Superuser
    - name: postgres
      databases:
        - postgres
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    # Applications
    - name: terraform
      databases:
        - terraform
      password:
        type: AlphaNumeric
    - name: authentik
      databases:
        - authentik
      password:
        type: AlphaNumeric


  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replica 2
      dataVolumeClaimSpec:
        storageClassName: longhorn
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: *name

  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        synchronous_commit: "on"

  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: pgbackrest-config
      global: &backupFlag
        compress-type: "bz2"
        compress-level: "9"
        # Minio
        repo1-retention-full-type: "time"
        repo1-retention-full: "14"
        repo1-retention-diff: "30"
        repo1-path: "/crunchy-postgres"
        repo1-s3-uri-style: path
        # R2
        repo2-block: "y"
        repo2-bundle: "y"
        repo2-path: /rpi-k8s-crunchy-postgres
        repo2-retention-full: "7" # days
        repo2-retention-full-type: time
        repo2-s3-uri-style: path
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      repos:
        - name: repo1 # Minio
          s3: &minio
            bucket: "crunchy-postgres"
            endpoint: minio-data.atoca.house
            region: "eu-west-1"
          schedules:
            full: "0 9 * * 0"           # Sunday at 09:00
            differential: "0 9 * * 1-6" # Mon-Sat at 09:00
            incremental: "0 10-23 * * *" # Every hour from 10:00 to 23:00
  dataSource:
    pgbackrest:
      stanza: "db"
      configuration: *backupConfig
      global: *backupFlag
      repo:
        name: "repo1"
        s3: *minio

  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M

  proxy:
    pgBouncer:
      port: 5432
      replicas: *replica
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-pgbouncer
      config:
        global:
          pool_mode: "transaction" # pgBouncer is set to transaction for Authentik.
          client_tls_sslmode: prefer
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: "pgbouncer"